<?xml version="1.0" ?>
<project name="Dawn" default="deploy">

	<property file="build.properties" />
	<property name="src.dir" value="../src" />
	<property name="ant.dir" value="../ant" />
	<property name="lib.dir" value="../lib" />
	<property name="dist.dir" value="../dist" />
	<property name="build.dir" value="../build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="web.dir" value="../web" />

	<!-- First: Clean old file if exist -->
	<target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<!-- Second: Create folder if not exist -->
	<target name="init" depends="clean">

		<!-- mkdir is used for create folder dist and build -->
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Third: Get list of lib to compile -->
	<path id="compile.classpath">
		<!-- fileset get list of file, limit with .jar file -->
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Fourth: Get list of lib and .java file to compile to jar and class file 
		If don't get lib, ANT will not be compile .java file -->
	<target name="compile" depends="init">
		<echo>Compiling now... </echo >

		<!-- Attention: src.dir (../src) will be complie by javac, after that, compile lib for this src -->
		<javac destdir="${build.classes.dir}" debug="true" srcdir="${src.dir}">

			<!-- Add lib, it's "Import" on java class -->
			<classpath refid="compile.classpath" />

		</javac>
		<echo>Compilation successful! </echo >

		<!-- Copy compiled file to ../build/classes-->
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<!-- Fifth: Build war file to deploy project on Server -->
	<target name="war" depends="compile">
		<war destfile="${dist.dir}/Dawn.war" needxmlfile='false'>

			<!-- Get js, css, Image -->
			<fileset dir="${web.dir}" />

			<!-- Lib -->
			<lib dir="${web.dir}/WEB-INF/lib" />
			
			<!-- Get compiled classes from folder build/classes -->
			<classes dir="${build.classes.dir}" />
		</war>
	</target>

	<!-- Sixth: Delete old war file and copy new war file to destination on build.properties -->
	<target name="deploy" depends="war" description="Deploy war file to ${deploy.folder}">
		<delete dir="${deploy.folder}/${project.name}.war" />
		<copy todir="${deploy.folder}" file="${dist.dir}/${project.name}.war" />
	</target>

</project>